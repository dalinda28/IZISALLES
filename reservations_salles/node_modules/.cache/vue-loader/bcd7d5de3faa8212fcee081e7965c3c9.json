{"remainingRequest":"/Users/home/Documents/GitHub/room_reservation/reservations_salles/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/home/Documents/GitHub/room_reservation/reservations_salles/src/views/AdminUsers.vue?vue&type=style&index=0&id=412a3d9a&scoped=true&lang=css","dependencies":[{"path":"/Users/home/Documents/GitHub/room_reservation/reservations_salles/src/views/AdminUsers.vue","mtime":1644420517285},{"path":"/Users/home/Documents/GitHub/room_reservation/reservations_salles/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/home/Documents/GitHub/room_reservation/reservations_salles/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1616796459000},{"path":"/Users/home/Documents/GitHub/room_reservation/reservations_salles/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/home/Documents/GitHub/room_reservation/reservations_salles/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/home/Documents/GitHub/room_reservation/reservations_salles/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jb250YWluZXItZmx1aWQgewogICAgICAgIG1hcmdpbjowIGF1dG87IAp9Ci5oZWxsb2JhciB7CiAgICBmb250LXNpemU6MjVweDsKfQoudGl0bGViYXJ7CiAgICBmb250LXNpemU6MThweDsKICAgIHBhZGRpbmc6IDNweDsKfQouYmFyIHsKICAgIG1hcmdpbi10b3A6IDUlOwogICAgbWFyZ2luLWJvdHRvbTogNSU7CiAgICBtYXJnaW4tdG9wOiA1JTsKfQoKLm92ZXJsYXl7CiAgICBwb3NpdGlvbjogZml4ZWQ7CiAgICB0b3A6IDA7CiAgICBib3R0b206IDA7CiAgICBsZWZ0OiAwOwogICAgcmlnaHQ6IDA7CiAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuNik7Cn0KLm1vZGFsLWRpYWxvZ3sKICAgIHRvcDoxNSUKfQoubW9kYWxfbXNnewogICAgZm9udC1zaXplOiAxOHB4Owp9CiNlcnJvcl9tc2csICNlcnJvcl9tc2cyIHsKICAgIGNvbG9yOiByZWQKfQouY29udGFpbmVyLXRvcHsKICAgIGRpc3BsYXk6IGluaXRpYWw7Cn0K"},{"version":3,"sources":["/Users/home/Documents/GitHub/room_reservation/reservations_salles/src/views/AdminUsers.vue"],"names":[],"mappings":";AA0WA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACrB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAChB;AACA,CAAC,CAAC,CAAC,EAAE;IACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AAClB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,CAAC,CAAC,EAAE,CAAC;IACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACT,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACP,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAClC;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACnB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACpB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AACb;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB","file":"/Users/home/Documents/GitHub/room_reservation/reservations_salles/src/views/AdminUsers.vue","sourceRoot":"","sourcesContent":["<template>\n    <div class=\"container-fluid\">\n        <div class=\"row bar\">\n            <div class=\"col-lg-12 bg-dark\">\n                <h1 class=\"hellobar text-center text-light display-4 pt-2\">Bonjour {{ $store.state.firstName }}</h1>\n            </div>\n            <div class=\"col-lg-12 bg-secondary\">\n                <h2 class=\"titlebar text-center text-light display-4 pt-2\">Gestion des utilisateurs</h2>\n            </div>\n        </div> \n        <div class=\"row\">\n            <button class=\"col-sm-3 btn btn-info float-center ml-2\" @click=\"showAddModal=true\">\n                Ajouter un nouvel utilisateur \n            </button>\n            <div class=\"col-sm-7\"></div>\n        </div>\n        <hr>\n        <br>\n        <div class=\"row\">\n            <div class=\"col-lg-12 pr-0 pl-0\">\n                <table class=\"table table-striped table-bordered\">\n                    <thead>\n                        <tr class=\"filters\">\n                            <th scope=\"col\"><input type=\"number\" class=\"form-control\" name=\"id\" id=\"id\" v-model=\"idComputed\" placeholder=\"Id\"></th>\n                            <th scope=\"col\"><input type=\"text\" class=\"form-control\" name=\"lastname\" id=\"lastname\" v-model=\"lastnameComputed\" placeholder=\"Nom\"></th>\n                            <th scope=\"col\"><input type=\"text\" class=\"form-control\" name=\"firstname\" id=\"firstname\" v-model=\"firstnameComputed\" placeholder=\"Prénom\"></th>\n                            <th scope=\"col\"><input type=\"text\" class=\"form-control\" name=\"mail\" id=\"mail\" v-model=\"mailComputed\" placeholder=\"Adresse mail\"></th>\n                            <th scope=\"col\" colspan=\"2\"><button class=\"btn btn-secondary\" name=\"emptyFilters\" id=\"emptyFilters\" @click=\"emptyFilters\">Vider les champs</button></th>\n                        </tr>\n                        <tr class=\"text-center bg-info text-light\">\n                            <th scope=\"col\">ID</th>\n                            <th scope=\"col\">Nom</th>\n                            <th scope=\"col\">Prénom</th>\n                            <th scope=\"col\">Email</th>\n                            <th scope=\"col\" colspan=\"2\" class=\"align-middle\"> Actions </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr class=\"text-center\" v-for=\"user in results\" :key=\"user.id\" v-bind:id=\"user.id\">\n                            <td>{{ user.id }}</td>\n                            <td>{{ user.nom }}</td>\n                            <td>{{ user.prenom }}</td>\n                            <td>{{ user.mail }}</td>\n                            <td><button class=\"btn btn-sm btn-info\" @click=\"selectUser\"><i class=\"bi bi-pencil-square\"></i>Modifier</button></td>\n                            <td><button class=\"btn btn-sm btn-danger\" @click=\"openDeleteModal(user.id)\"><i class=\"bi bi-pencil-square\"></i>Supprimer</button></td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n    <!-- Fenêtre d'ajout d'un utilisateur-->\n    <div class=\"overlay\" v-if=\"showAddModal\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h5 class=\"modal-title\">Ajouter un nouvel utilisateur </h5>\n                    <button type=\"button\" class=\"close\" @click=\"showAddModal=false\">\n                        <span aria-hidden=\"true\">&times; </span>\n                    </button>\n                </div>\n                <div class=\"modal-body p-4\">\n                    <form @submit.prevent>\n                        <span id=\"error_msg2\"></span>\n                        <div class=\"form-group\">\n                            <input type=\"text\" v-model=\"userData.nom\" name=\"nom\" class=\"form-control form-control\" placeholder=\"Nom\" required>\n                        </div> \n                        <div class=\"form-group\">\n                            <input type=\"text\" v-model=\"userData.prenom\" name=\"prenom\" class=\"form-control form-control\" placeholder=\"Prénom\" required> \n                        </div>\n                        <div class=\"form-group\">\n                            <input type=\"email\" v-model=\"userData.mail\" name=\"email\" class=\"form-control form-control\" placeholder=\"Email\" required>\n                        </div> \n                        <div class=\"form-group\">\n                            <input type=\"password\" v-model=\"userData.mdp\" name=\"mdp\" class=\"form-control form-control\" placeholder=\"Password\" required>\n                        </div>\n                        <div class=\"form-group\">\n                            <button class=\"btn btn-info btn-block\" @click=\"addUser()\" :disabled=\"!canAddUser()\">Ajouter l'utilisateur </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- Fenêtre de modification d'un utilisateur-->\n    <div class=\"overlay\" v-if=\"showEditModal\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h5 class=\"modal-title\">Modifier l'utilisateur </h5>\n                    <button type=\"button\" class=\"close\" @click=\"showEditModal=false\">\n                        <span aria-hidden=\"true\">&times; </span>\n                    </button>\n                </div>\n                <div class=\"modal-body p-4\">\n                    <div>\n                        <div class=\"form-group\">\n                            <input type=\"text\" v-model=\"userData.nom\" name=\"nom\" class=\"form-control form-control-lg\" placeholder=\"Nom\">\n                        </div> \n                        <div class=\"form-group\">\n                            <input type=\"text\" v-model=\"userData.prenom\" name=\"prenom\" class=\"form-control form-control-lg\" placeholder=\"Prénom\">\n                        </div>\n                        <div class=\"form-group\">\n                            <input type=\"email\" v-model=\"userData.mail\" name=\"mail\" class=\"form-control form-control-lg\" placeholder=\"Email\">\n                            <span id=\"error_msg\"></span>\n                        </div> \n                        <div class=\"form-group\">\n                            <input type=\"password\" v-model=\"userData.mdp\" name=\"password\" class=\"form-control form-control-lg\" placeholder=\"Password\">\n                        </div>\n                        <div class=\"form-group\">\n                            <button class=\"btn btn-info btn-block btn-lg\" @click=\"updateUser()\">Modifier l'utilisateur </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!-- Suppression d'un utilisateur -->\n    <div class=\"overlay\" v-if=\"showDeleteModal\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h5 class=\"modal-title\">Supprimer un utilisateur </h5>\n                    <button type=\"button\" class=\"close\" @click=\"showDeleteModal=false\">\n                        <span aria-hidden=\"true\">&times; </span>\n                    </button>\n                </div>\n                <div class=\"modal-body p-4\">\n                    <p class=\"modal_msg\"> Êtes-vous sûr de vouloir supprimer '{{ selectedUser.prenom }} {{ selectedUser.nom }}' ?</p>                      \n                </div>\n                <div class=\"modal-footer\">\n                    <button class=\"btn btn-danger btn\" @click=\"deleteUser\">Oui</button>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    <button class=\"btn btn-secondary btn\" @click=\"showDeleteModal=false\">Non</button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</template>\n\n<script>\nimport axios from 'axios';\nvar bcrypt = require('bcryptjs');\n\nexport default {\nname: 'app',\n  data(){\n    return {\n        //résultat du filtre\n        results: [],\n\n        // Filtres utilisés par l'administrateur pour trouver un user\n        filters: {\n            id: \"\", \n            lastname: \"\", \n            firstname: \"\", \n            mail: \"\"\n        },\n\n        // Tous les users\n        users: [],\n\n        // Condition d'affichage des pop-ups\n        showAddModal: false,\n        showEditModal: false,\n        showDeleteModal: false,\n\n        // L'utilisateur sélectionner\n        selectedUser: [],\n\n        // Les données de l'utilisateur\n        userData: []\n    }\n  },\n    mounted() {\n        this.refreshUsers();\n    },\n    methods:{ \n        canAddUser(){\n            if (this.userData.nom != null && this.userData.prenom != null && this.userData.mail != null && this.userData.mdp != null \n            && this.userData.nom != \"\" && this.userData.prenom != \"\" && this.userData.mail != \"\" && this.userData.mdp != \"\"){\n                return true;\n            }\n            else {\n                return false;\n            }\n        },\n\n        addUser(){\n            if (this.canAddUser()) {\n                var hashedPassword = bcrypt.hashSync(this.userData.mdp, 10);     \n\n                let formData = new FormData();\n                formData.append('nom', this.userData.nom);\n                formData.append('prenom', this.userData.prenom);\n                formData.append('mail', this.userData.mail);\n                formData.append('profil', 'enseignant');\n                formData.append('mdp', hashedPassword);\n                \n                axios.post(\"http://localhost:8888/reservations_salles/src/api/controllers/UsersResource.php\", formData) \n                .then((response) => {\n                    var msg = \"\";\n                    if (response.data === \"inserted\"){\n                        this.refreshUsers(); \n                        this.userData = [];\n                        this.showAddModal=false;\n                    }\n                    else if (response.data === \"exists_user_same_mail\"){\n                        msg = \"Ce mail est déjà utilisé par un autre utilisateur\";\n                        document.getElementById(\"error_msg2\").textContent = msg;\n                    }\n                    else {\n                        msg = \"Les données saisies ne peuvent pas être insérées\";\n                        document.getElementById(\"error_msg2\").textContent = msg;\n                        console.log(response.data);\n                    }\n                })\n            }  \n            else {\n                document.getElementById(\"error_msg2\").textContent = \"Veuillez remplir correctement tous les champs\";\n            }                        \n        }, \n\n        selectUser: function(event){\n            this.showEditModal = true;\n            var currUserId = event.target.parentElement.parentElement.id;\n            this.selectedUser = this.users.filter(user => user.id == currUserId)[0];  \n            //Copy datas of selectUser in userData\n            for (var key in this.selectedUser){\n                this.userData[key] = this.selectedUser[key];\n            }\n        },\n\n        updateUser(){\n            axios.put(\"http://localhost:8888/reservations_salles/src/api/controllers/UsersResource.php\", \n                JSON.stringify({\n                    id: this.userData.id,\n                    nom: this.userData.nom,\n                    prenom: this.userData.prenom,\n                    mail: this.userData.mail,\n                    mdp: this.userData.mdp\n                }))\n                .then((response) => {\n                    if (response.data === \"updated\"){\n                        this.showEditModal = false;\n                        this.refreshUsers();\n                    }\n                    else if (response.data === \"exists_user_same_mail\") {\n                        var msg = \"Ce mail est déjà utilisé par un autre utilisateur\";\n                        document.getElementById(\"error_msg\").textContent = msg;\n                    }\n                    else {\n                        console.log(\"Problème dans le serveur\");\n                    }\n                })\n        },\n\n        openDeleteModal($id_user){\n            this.showDeleteModal = true;\n            this.selectedUser = this.users.filter(user => user.id === $id_user)[0];\n        },\n\n        deleteUser(){\n            //On supprime toutes les réservations de l'user\n            axios.delete(\"http://localhost:8888/reservations_salles/src/api/controllers/ReservationsResource.php?id_user=\"+this.selectedUser.id)\n            .then((response) => {\n                if (response.data === \"ok\"){\n                    //On supprime l'user\n                    axios.delete(\"http://localhost:8888/reservations_salles/src/api/controllers/UsersResource.php?id=\"+this.selectedUser.id)\n                    .then((response) => {\n                        //Réponse de requête réussie\n                        if (response.data === \"ok\"){\n                            this.showDeleteModal = false;\n                            this.refreshUsers();\n                        }\n                        else {\n                            //Afficher message d'erreur php\n                            console.log(response.data);\n                        }\n                     })\n                }\n                else {\n                    //Afficher message d'erreur php\n                    console.log(response.data);\n                }\n            });\n\n        },\n\n        //rechargement / rafraîchissement automatique des données\n        refreshUsers(){\n            this.users = axios.get(\"http://localhost:8888/reservations_salles/src/api/controllers/UsersResource.php\")\n            .then((response) => {\n                this.users = response.data;\n                this.results = [];\n                for (var key in this.users){\n                    this.results[key] = this.users[key];\n                }\n            });\n        },\n\n        changeResults(){\n            this.results = [];\n            for (var key in this.users){\n                this.results[key] = this.users[key];\n            }\n            this.results = this.filters.firstname != \"\" ? this.results.filter(user => user.prenom.toLowerCase().includes(this.filters.firstname.toLowerCase())) : this.results;\n            this.results = this.filters.lastname != \"\" ? this.users.filter(user => user.nom.toLowerCase().includes(this.filters.lastname.toLowerCase())) : this.results;\n            this.results = this.filters.mail != \"\" ? this.results.filter(user => user.mail.toLowerCase().includes(this.filters.mail.toLowerCase())) : this.results;\n            this.results = this.filters.id != \"\" ? this.results.filter(user => parseInt(user.id, 10) == parseInt(this.filters.id, 10)) : this.results;\n        },\n        emptyFilters(){\n            this.idComputed = \"\";\n            this.lastnameComputed = \"\";\n            this.firstnameComputed = \"\";\n            this.mailComputed = \"\";\n        }\n    },\n    computed: {\n        idComputed: {\n            get: function() {\n                return this.filters.id;\n            },\n            set: function(input) {\n                this.filters.id = input;\n                this.changeResults();\n            }\n        },\n        lastnameComputed: {\n            get: function() {\n                return this.filters.lastname;\n            },\n            set: function(input) {\n                this.filters.lastname = input;\n                this.changeResults();\n            }\n        },\n        firstnameComputed: {\n            get: function() {\n                return this.filters.firstname;\n            },\n            set: function(input) {\n                this.filters.firstname = input;\n                this.changeResults();\n            }\n        },\n        mailComputed: {\n            get: function() {\n                return this.filters.mail;\n            },\n            set: function(input) {\n                this.filters.mail = input;\n                this.changeResults();\n            }\n        }\n    }\n}\n</script>\n\n<style scoped>\n.container-fluid {\n        margin:0 auto; \n}\n.hellobar {\n    font-size:25px;\n}\n.titlebar{\n    font-size:18px;\n    padding: 3px;\n}\n.bar {\n    margin-top: 5%;\n    margin-bottom: 5%;\n    margin-top: 5%;\n}\n\n.overlay{\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background: rgba(0, 0, 0, 0.6);\n}\n.modal-dialog{\n    top:15%\n}\n.modal_msg{\n    font-size: 18px;\n}\n#error_msg, #error_msg2 {\n    color: red\n}\n.container-top{\n    display: initial;\n}\n</style>\n"]}]}